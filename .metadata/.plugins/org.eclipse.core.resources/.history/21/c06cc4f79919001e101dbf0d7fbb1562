package com.b66k.www.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.b66k.www.domain.BookVO;
import com.b66k.www.domain.PagingVO;
import com.b66k.www.handler.PagingHandler;
import com.b66k.www.service.BookService;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/book/*")
@Controller
public class BookController {
	
	@Inject
	private BookService bsv;
	
	@GetMapping("/register")
	public void register() {
	}
	
	/* 상품등록 */
	@PostMapping("/register")
	public String register(Model m, BookVO bvo) {
		log.info("bvo > " + bvo.toString());
		int isOk = bsv.register(bvo);
		log.info("book register > "+ (isOk > 0 ?  "성공" : "실패"));
		m.addAttribute("isOk", isOk);
		return "home";
		
	}
	
	/* 상품 리스트 페이징 */
	@GetMapping("/list")
	public String list(Model m, PagingVO pvo) {
		log.info(">>>>>>>> pagevo >>>>>>>>> : " + pvo);
		List<BookVO> list = bsv.list(pvo);
		m.addAttribute("list", list);
		int totalCount = bsv.totalCount(pvo);
		log.info(">>>>>>>> totalCount > " + totalCount);
		PagingHandler ph = new PagingHandler(pvo, totalCount);
		m.addAttribute("ph", ph);
		return "/book/list";
	}
	
	@GetMapping("/detail")
	public void detail(Model m, @RequestParam("bno") int bno) {
		log.info(">>> bno >" + bno);
		BookVO bvo = bsv.detail(bno);
		log.info("bvo > " + bvo.toString());
		m.addAttribute("bvo", bvo);
	}
	
	@GetMapping("/modify")
	public void modify(Model m, @RequestParam("bno") int bno) {
		log.info(">>> bno >" + bno);
		BookVO bvo = bsv.detail(bno);
		m.addAttribute("bvo", bvo);
	}
	
	@PostMapping("/modify")
	public String modify(Model m, BookVO bvo, RedirectAttributes rAttr) {
		log.info(">>> 수정할 bvo >" + bvo);
		int isOk = bsv.modify(bvo);
		log.info("book modify > "+ (isOk > 0 ?  "성공" : "실패"));
		m.addAttribute("bvo", bvo);
		return "redirect:/book/list";
	}
	
	@GetMapping("/delete")
	public String delete(@RequestParam("bno") int bno, RedirectAttributes rAttr) {
		log.info("삭제할 bno > " + bno);
		int isOk = bsv.delete(bno);
		log.info(">>> 글 삭제 >" + (isOk > 0 ? "성공" : "실패" ));
		return "redirect:/book/list";

	}
	

	@GetMapping("/main")
	public void main(Model m, @RequestParam("bno") int bno) {
		log.info(">>> bno >" + bno);
		BookVO bvo = bsv.detail(bno);
		log.info("bvo > " + bvo.toString());
		m.addAttribute("bvo", bvo);
	}
	

	

}
