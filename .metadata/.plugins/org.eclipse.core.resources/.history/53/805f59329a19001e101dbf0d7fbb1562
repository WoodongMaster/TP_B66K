<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.b66k.www.repository.BookDAO">
<!-- 상품 등록 -->
	<insert id="register">
		insert into book(title, author, price, amount,  releaseDate)
		values(#{title}, #{author}, #{price}, #{amount}, #{releaseDate})
	</insert>
	
<!-- 상품 리스트 출력 -->
	<select id="list" resultType="bvo">
		select * from book where isDel = "N";
	</select>
	
<!-- 상품 디테일 출력 -->
	<select id="detail" resultType="bvo">
		select * from book where bno = #{bno}
	</select>

<!-- 상품 수정 -->
	<update id="modify">
		update book set title = #{title}, author = #{author}, releaseDate = #{releaseDate}, price = #{price},
		amount = #{amount} where bno = #{bno}
	</update>
	
	<!-- 상품 삭제 -->
	<update id="delete">
		update book set isDel = "Y" where bno = #{bno}
	</update>
	<select id="selectBno" resultType="bvo">
		select * from book where bno = #{bno}
	</select>
	<select id="selectListPaging" resultType="bvo">
		select a.bno, title, author, releaseDate, price, amount, reg_date from
		(
		select bno from book where isDel = "N"
		<include refid="search"></include>
		order by bno desc
		limit
		#{pageStart}, #{qty}
		) a left join book b
		on
		a.bno
		= b.bno
	</select>
	<select id="totalCount" resultType="int">
		select count(bno) from
		book where isDel = "N"
		<include refid="search"></include>
	</select>
	<sql id="search">
		<if test="type != null">
			<trim prefix="and (" suffix=")" prefixOverrides="OR">
				<foreach collection="typeToArray" item="type">
					<trim prefix="OR">
						<choose>
							<when test="type == 't'.toString()">
								title like concat('%', #{keyword}, '%')
							</when>
							<when test="type == 'a'.toString()">
								author like concat('%', #{keyword}, '%')
							</when>
							<when test="type == 'p'.toString()">
								price like concat('%', #{keyword}, '%')
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</if>
	</sql>
</mapper>